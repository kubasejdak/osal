name: Test Standard Linux

on: [push, pull_request]

jobs:
  test-linux-gcc:
    runs-on: ubuntu-latest
    container:
      image: kubasejdak/gcc:${{ matrix.gcc }}
    strategy:
      matrix:
        gcc: [9]
        mode: [Debug, Release]

    steps:
      - uses: actions/checkout@v1

      - name: Build application
        run: |
          mkdir build
          cd build

          conan install .. --build missing -s build_type=${{ matrix.mode }}
          cmake .. -DPLATFORM=linux -DTOOLCHAIN=gcc-${{ matrix.gcc }} -DCMAKE_BUILD_TYPE=${{ matrix.mode }} -DCOVERAGE=ON
          make

      - uses: actions/upload-artifact@v1
        with:
          name: build_gcc_${{ matrix.gcc }}_${{ matrix.mode }}
          path: build/bin

      - name: Run tests
        run: |
          chown -R root:root build
          cd build/bin
          ./osal-tests [unit]

      - name: Generate coverage report
        run: |
          cd build
          make coverage

      - name: Upload coverage report
        run: |
          cd build
          bash -c "bash <(curl -s https://codecov.io/bash) -t ${{ secrets.ACCESS_TOKEN_CODECOV }}"

  test-linux-clang:
    runs-on: ubuntu-latest
    container:
      image: kubasejdak/clang:${{ matrix.clang }}
    strategy:
      matrix:
        clang: [9]
        mode: [Debug, Release]

    steps:
      - uses: actions/checkout@v1

      - name: Build application
        run: |
          mkdir build
          cd build

          conan install .. --build missing -s build_type=${{ matrix.mode }}
          cmake .. -DPLATFORM=linux -DTOOLCHAIN=clang-${{ matrix.clang }} -DCMAKE_BUILD_TYPE=${{ matrix.mode }}
          make

      - uses: actions/upload-artifact@v1
        with:
          name: build_clang_${{ matrix.clang }}_${{ matrix.mode }}
          path: build/bin

      - name: Run tests
        run: |
          chown -R root:root build
          cd build/bin
          ./osal-tests [unit]
